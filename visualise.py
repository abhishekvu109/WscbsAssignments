#!/usr/bin/env python3
import base64
from PIL import Image
from io import BytesIO


## @package visualise
#  This module is used for visualising the information generated by compute package.
#  The wordcloud image for the supplied vaccine name is rendered as a result.


def vaccine_polarity_visualisation(vaccine):
    ##
    #@brief Used to render the polarity of input vaccine parameter using wordcloud visualisation.
    #
    #@param vaccine vaccine-name supplied
    #
    with open("./"+vaccine+"_sentiment_wordclouds_optimised_dataset.png", "rb") as image_file:
        file_bytes = image_file.read()
    encoded_string = print_base64_value(file_bytes)
    print(encoded_string.decode('utf-8'))
    image = Image.open(BytesIO(base64.b64decode(encoded_string)))
    # image.show()


def validate_vaccine_name(passed_vaccine):
    ##
    # @brief Validates the input vaccine parameter against pre-defined accepted vaccines.
    #
    # @param passed_vaccine vaccine-name supplied
    #
    all_vax = ['covaxin', 'sinopharm', 'sinovac', 'moderna', 'pfizer', 'biontech', 'oxford', 'astrazeneca', 'sputnik']
    return passed_vaccine in all_vax


def print_base64_value(file_bytes):
    ##
    # @brief Returns the base64 value of the supplied file object (in bytes).
    #
    # @param file_bytes file specified in bytes
    #
    encoded_string = base64.b64encode(file_bytes)
    return encoded_string


# Accept the vaccine name as input, validate whether it is appropriate, and provide the visualisation.
if __name__ == '__main__':
    vaccine = input("Please enter vaccine name for which you want the sentiment analysis visualisation: \n")
    if validate_vaccine_name(vaccine):
        vaccine_polarity_visualisation(vaccine.lower())
    else:
        print("Please run the program again and enter a valid vaccine name for which you want the sentiment analysis "
              "visualisation!\n")